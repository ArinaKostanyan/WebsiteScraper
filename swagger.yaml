components:
  schemas:
    Floorplan:
      properties:
        bathrooms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Bathrooms
        bedrooms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Bedrooms
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
        price:
          anyOf:
          - type: number
          - type: 'null'
          title: Price
        square_feet:
          anyOf:
          - type: integer
          - type: 'null'
          title: Square Feet
      required:
      - id
      - name
      title: Floorplan
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    InterestedFloorplan:
      properties:
        floorplan_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Floorplan Name
        property_name:
          title: Property Name
          type: string
        user_id:
          title: User Id
          type: integer
      required:
      - user_id
      - property_name
      title: InterestedFloorplan
      type: object
    User:
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: User
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: API for managing properties and floorplans, including interested floorplans.
  title: Property Management API
  version: '1.0'
openapi: 3.1.0
paths:
  /:
    get:
      operationId: root__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Root
      tags:
      - Root
  /floorplans:
    get:
      operationId: get_floorplans_by_filters_floorplans_get
      parameters:
      - in: query
        name: price_min
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Price Min
      - in: query
        name: price_max
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Price Max
      - in: query
        name: number_of_bedrooms
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Number Of Bedrooms
      - in: query
        name: number_of_bathrooms
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Number Of Bathrooms
      - in: query
        name: square_feet_min
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Square Feet Min
      - in: query
        name: square_feet_max
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Square Feet Max
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floorplan'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Floorplans By Filters
      tags:
      - Floorplans
  /floorplans/{property_name}:
    get:
      operationId: get_property_floorplans__property_name__get
      parameters:
      - in: path
        name: property_name
        required: true
        schema:
          title: Property Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Property
      tags:
      - Floorplans
  /floorplans/{property_name}/{floorplan_name}:
    get:
      operationId: get_property_floorplans__property_name___floorplan_name__get
      parameters:
      - in: path
        name: property_name
        required: true
        schema:
          title: Property Name
          type: string
      - in: path
        name: floorplan_name
        required: true
        schema:
          title: Floorplan Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Property
      tags:
      - Floorplans
  /interested:
    delete:
      operationId: delete_interested_by_user_id_interested_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestedFloorplan'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Interested By User Id
      tags:
      - Interested
    post:
      operationId: add_floorplan_interested_interested_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestedFloorplan'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Add Floorplan Interested
      tags:
      - Interested
  /interested/{user_id}:
    get:
      operationId: get_interested_by_user_id_interested__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Interested By User Id
      tags:
      - Interested
  /scrape:
    post:
      operationId: scrape_data_scrape_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Scrape Data
      tags:
      - Scrape websites
  /users:
    post:
      operationId: add_user_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Add User
      tags:
      - Users
  /users/{user_id}:
    get:
      operationId: get_user_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get User
      tags:
      - Users
